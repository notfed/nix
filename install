#!/usr/bin/env bash
set -e

# -------- Sanity checks --------

if [ "$#" -ne 1 ] ; then
    echo "usage: ./install <device-to-destroy>" 
    exit 1
fi

export WIPE_DEVICE=$1

if mount | grep $WIPE_DEVICE > /dev/null; then
    echo "The device '$WIPE_DEVICE' is already mounted. Action cancelled."
    exit 1
fi

read -p "WARNING! This will DESTROY '$WIPE_DEVICE'! Are you sure? If so, type '$WIPE_DEVICE': " choice
if [ "$choice" != "$WIPE_DEVICE" ]; then
  echo "Action cancelled."
  exit 1
fi

./format-ext4-enc

echo "-------- Copying NixOS configuration to '$WIPE_DEVICE' --------"

sed -i "s/^  boot.loader.grub.device = .*$/  boot.loader.grub.device = \"${WIPE_DEVICE//\//\\/}\";/g" configuration.nix
nixos-generate-config --root /mnt
cp configuration.nix /mnt/etc/nixos/configuration.nix
cp files/background.jpg /mnt/etc/nixos/
cp patches/* /mnt/etc/nixos/

echo "-------- Updating current OS's packages --------"

nix-build '<nixpkgs/nixos>' -A config.system.build.toplevel -I nixos-config=/mnt/etc/nixos/configuration.nix # Workaround for https://github.com/NixOS/nixpkgs/issues/126141


echo "-------- Installing NixOS --------"

nixos-install --root /mnt
